/* ==========================================================================
  ATOMIC CORE
========================================================================== */

/*== FLEX-DIRECTION ==*/

.fd-r {
    flex-direction: row
}

.fd-c {
    flex-direction: column
}

.fw-nw {
    flex-wrap: nowrap
}

.fw-w {
    flex-wrap: wrap
}

/*== JUSTIFY CONTENT ==*/

.jc-c {
    justify-content: center
}

.jc-fs {
    justify-content: flex-start
}

.jc-fe {
    justify-content: flex-end
}

.jc-sa {
    justify-content: space-around
}

.jc-sb {
    justify-content: space-between
}

/*== ALIGN CONTENT ==*/

.ac-s {
    align-content: stretch
}

.ac-c {
    align-content: center
}

.ac-fs {
    align-content: flex-start
}

.ac-fe {
    align-content: flex-end
}

.ac-sb {
    align-content: space-between
}

.ac-sa {
    align-content: space-around
}

/*== ALIGN ITEMS (Y-axis)== */

.ai-s {
    align-items: stretch
}

.ai-c {
    align-items: center
}

.ai-bs {
    align-items: baseline
}

.ai-fs {
    align-items: flex-start
}

.ai-fe {
    align-items: flex-end
}

/*== Flex-grow ==*/

.fg-0 {
    flex-grow: 0
}

.fg-1 {
    flex-grow: 1
}

/*== Flex-Shrink ==*/

.fs-0 {
    flex-shrink: 0
}

.fs-1 {
    flex-shrink: 1
}

/* ===  VISIBILITY  === */

.d-n {
    display: none
}

.v-h {
    visibility: hidden
}

.o-0 {
    opacity: 0
}

/* ===  POSITION  === */

.p-r {
    position: relative
}

.p-a {
    position: absolute
}

.p-f {
    position: fixed
}

.p-s {
    position: sticky
}

.t-0 {
    top: 0
}

.b-0 {
    bottom: 0
}

.l-0 {
    left: 0
}

.r-0 {
    right: 0
}

/* ===  TEXT ALIGN  === */

.ta-c {
    text-align: center
}

.ta-r {
    text-align: right
}

.ta-l {
    text-align: left
}

/* ===  TEXT STYLE  === */

.tt-u {
    text-transform: uppercase
}

.td-u {
    text-decoration: underline
}

/* ===  LINE-HEIGHT  === */

.lh-xs {
    line-height: 1
}

.lh-s {
    line-height: 1.1
}

.lh-m {
    line-height: 1.2
}

.lh-l {
    line-height: 1.3
}

.lh-xl {
    line-height: 1.4
}

.lh-xxl {
    line-height: 1.5
}

/* ===  DISPLAY === */

.d-f {
    display: flex
}

.d-if {
    display: inline-flex
}

.d-n {
    display: none
}

.d-b {
    display: block
}

.d-ib {
    display: inline-block
}

.d-t {
    display: table
}

.d-tc {
    display: table-cell
}

/* == COLOR == */


.c-lightest {
    color: $lightestTxtColor
}

.c-light {
    color: $lightTxtColor
}

.c-lighter {
    color: $lighterTxtColor
}

.c-mid {
    color: $midTxtColor
}

.c-dark {
    color: $darkTxtColor
}

.c-darkest {
    color: $darkestTxtColor
}

.c-main {
    color: $mainTxtColor
}

/* == FILL SVG COLOR  == */

.f-lightest {
    fill: $lightestFillColor
}

.f-light {
    fill: $lightFillColor
}

.f-lighter {
    fill: $lighterFillColor
}

.f-mid {
    fill: $midFillColor
}

.f-dark {
    fill: $darkFillColor
}

.f-darker {
    fill: $darkerFillColor
}

.f-darkest {
    fill: $darkestFillColor
}

.f-main {
    fill: $mainFillColor
}

/*  == BACKGROUND COLOR == */

.bgc-lightest {
    background-color: $lightestBgColor
}

.bgc-lighter {
    background-color: $lighterBgColor
}

.bgc-light {
    background-color: $lightBgColor
}

.bgc-mid {
    background-color: $midBgColor
}

.bgc-dark {
    background-color: $darkBgColor
}

.bgc-darkest {
    background-color: $darkestBgColor
}

.bgc-main {
    background-color: $mainBgColor
}

/*==  BORDER ==*/

.b-no {
    border: none
}

.bt-no {
    border-top: none
}

.bb-no {
    border-bottom: none
}

.bl-no {
    border-left: none
}

.br-no {
    border-right: none
}

.bw-xs {
    border-width: 1px
}

.btw-xs {
    border-top-width: 1px
}

.brw-xs {
    border-right-width: 1px
}

.bbw-xs {
    border-bottom-width: 1px
}

.blw-xs {
    border-left-width: 1px
}

.bw-s {
    border-width: 2px
}

.btw-s {
    border-top-width: 2px
}

.brw-s {
    border-right-width: 2px
}

.bbw-s {
    border-bottom-width: 2px
}

.blw-s {
    border-left-width: 2px
}

.bc-lighter {
    border-color: $lighterBorderColor
}

.bc-light {
    border-color: $lightBorderColor
}

.bc-mid {
    border-color: $midBorderColor
}

.bc-dark {
    border-color: $darkBorderColor
}

.bc-darker {
    border-color: $darkerBorderColor
}

.bc-darkest {
    border-color: $darkestBorderColor
}

.bc-main {
    border-color: $mainBorderColor
}

/* ===  WIDTH  === */

.w-100 {
    width: 100%
}

.w-90 {
    width: 90%
}

.w-80 {
    width: 80%
}

.w-75 {
    width: 75%
}

.w-66c6 {
    width: 66.66%
}

.w-60 {
    width: 60%
}

.w-50 {
    width: 50%
}

.w-40 {
    width: 40%
}

.w-33c3 {
    width: 33.33%
}

.w-25 {
    width: 25%
}

.w-20 {
    width: 20%
}

/* ===  HEIGHT  === */

.h-100 {
    height: 100%
}

/* ===  MARGIN  === */

.mgl-a {
    margin-left: auto;
}

.mgr-a {
    margin-right: auto;
}


/* 
mgt-xs, 
mgt-s, 
mgt-m, 
mgt-l, 
mgt-xl,
mgb-xs, 
mgb-s, 
mgb-m, 
mgb-l, 
mgb-xl...*/

@each $name,
$value in $boxValues {
    .mg-#{$name} {
        margin: $value;
    }
};

@each $side in $sides {

    @each $name,
    $value in $boxValues {
        .mg#{str-slice($side, 0, 1)}-#{$name} {
            margin-#{$side}: $value;
        }
    }
};

/* ===  PADDING  === */

/* 
pdt-xs, 
pdt-s, 
pdt-m, 
pdt-l, 
pdt-xl,
pdb-xs, 
pdb-s, 
pdb-m, 
pdb-l, 
pdb-xl...*/

@each $name,
$value in $boxValues {
    .pd-#{$name} {
        padding: $value;
    }
}

@each $side in $sides {

    @each $name,
    $value in $boxValues {
        .pd#{str-slice($side, 0, 1)}-#{$name} {
            padding-#{$side}: $value;
        }
    }
}

/*==  FONT ==*/

.fs-xxxl {
    font-size: $fs-xxxl
}

.fs-xxl {
    font-size: $fs-xxl
}

.fs-xl {
    font-size: $fs-xl
}

.fs-l {
    font-size: $fs-l
}

.fs-m {
    font-size: $fs-m
}

.fs-s {
    font-size: $fs-s
}

.fs-xs {
    font-size: $fs-xs
}

.fs-xxs {
    font-size: $fs-xxs
}

.ff-main {
    font-family: $ff-main, sans-serif
}

.ff-scd {
    font-family: $ff-scd, sans-serif
}

.fw-700 {
    font-weight: 700
}

.fw-600 {
    font-weight: 600
}

.fw-400 {
    font-weight: 400
}

//*== MISC ==*/

.c-p {
    cursor: pointer
}

.o-h {
    overflow: hidden
}

.o-a {
    overflow: auto
}

.f-l {
    float: left;
}

.f-r {
    float: right
}

.f-n {
    float: none;
}

/* ==========================================================================
  ATOMIC CUSTOM CLASS
========================================================================== */

/* Here you can add all your custom atomik classes you need in addition 
to the existing set defined in atomik.scss */

// === HOVER state ===//

.td-u\:h:hover {
    text-decoration: underline
}

.c-main\:h:hover {
    color: $mainTxtColor;
    transition: color 0.25s ease
}

.f-main\:h:hover {
    fill: $mainTxtColor;
    transition: fill 0.25s ease
}

// === BGC custom ===//

.bgc-warning {
    background-color: $warningBgColor
}

.bgc-success {
    background-color: $successBgColor
}

.c-error {
    color: $ErrorTxtColor;
}