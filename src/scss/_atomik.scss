/* ==========================================================================
  ATOMIC CORE
========================================================================== */

/*== FLEX-DIRECTION ==*/

.fd-r {
    flex-direction: row;
}

.fd-c {
    flex-direction: column;
}

.fw-nw {
    flex-wrap: nowrap;
}

.fw-w {
    flex-wrap: wrap;
}

.ff-rr {
    flex-flow: row-reverse;
}

/*== ORDER ==*/

.ord-0 {
    order: 0;
}
.ord-1 {
    order: 1;
}
.ord-2 {
    order: 2;
}

/*== JUSTIFY CONTENT ==*/

.jc-c {
    justify-content: center;
}

.jc-fs {
    justify-content: flex-start;
}

.jc-fe {
    justify-content: flex-end;
}

.jc-sa {
    justify-content: space-around;
}

.jc-sb {
    justify-content: space-between;
}

.jc-se {
    justify-content: space-evenly;
}

/*== ALIGN ITEMS (Y-axis)== */

.ai-s {
    align-items: stretch;
}

.ai-c {
    align-items: center;
}

.ai-bs {
    align-items: baseline;
}

.ai-fs {
    align-items: flex-start;
}

.ai-fe {
    align-items: flex-end;
}

/*== Flex-grow ==*/

.fg-0 {
    flex-grow: 0;
}

.fg-1 {
    flex-grow: 1;
}

/*== Flex-Shrink ==*/

.fs-0 {
    flex-shrink: 0;
}

.fs-1 {
    flex-shrink: 1;
}

/*== Flex-basis ==*/

.fb-0 {
    flex-basis: 0;
}

/* ===  VISIBILITY  === */

.d-n {
    display: none;
}

.v-h {
    visibility: hidden;
}

.o-0 {
    opacity: 0;
}

.o-0c5 {
    opacity: 0.5;
}

.o-1 {
    opacity: 1;
}

/* ===  POSITION  === */

.p-r {
    position: relative;
}

.p-a {
    position: absolute;
}

.p-f {
    position: fixed;
}

.p-st {
    position: sticky;
}

.t-0 {
    top: 0;
}

.t-50 {
    top: 50%;
}

.t-100 {
    top: 100%;
}

.l-0 {
    left: 0;
}

.l-50 {
    left: 50%;
}

.l-100 {
    left: 100%;
}

.r-0 {
    right: 0;
}

.r-50 {
    right: 50%;
}

.r-100 {
    right: 100%;
}

.b-0 {
    bottom: 0;
}

.b-50 {
    bottom: 50%;
}
.b-100 {
    bottom: 100%;
}

/* === Z-INDEX  === */

.zi-1 {
    z-index: 1;
}

.zi-2 {
    z-index: 2;
}
.zi-3 {
    z-index: 3;
}

.zi-4 {
    z-index: 4;
}

.zi-5 {
    z-index: 5;
}

/* ===  TEXT ALIGN  === */

.ta-c {
    text-align: center;
}

.ta-r {
    text-align: right;
}

.ta-l {
    text-align: left;
}

/* ===  TEXT STYLE  === */

.tt-u {
    text-transform: uppercase;
}

.td-u {
    text-decoration: underline;
}

.ws-nw {
    white-space: nowrap;
}

.ws-n {
    white-space: normal;
}

/* ===  LINE-HEIGHT  === */

.lh-xxs {
    line-height: 1;
}

.lh-xs {
    line-height: 1.1;
}

.lh-s {
    line-height: 1.2;
}

.lh-m {
    line-height: 1.3;
}

.lh-l {
    line-height: 1.4;
}

.lh-xl {
    line-height: 1.5;
}

.lh-xxl {
    line-height: 1.6;
}

/* ===  DISPLAY === */

.d-f {
    display: flex;
}

.d-if {
    display: inline-flex;
}

.d-b {
    display: block;
}

.d-ib {
    display: inline-block;
}

.d-t {
    display: table;
}
.d-c {
    display: contents;
}
.tl-f {
    table-layout: fixed;
}

.d-tc {
    display: table-cell;
}

/* == COLOR == */

@each $name, $value in $colorValues {
    .c-#{$name} {
        color: $value;
    }
}

/*  == BACKGROUND COLOR == */

@each $name, $value in $colorValues {
    .bgc-#{$name} {
        background-color: $value;
    }
}

/*==  BORDER ==*/

// COLOR

@each $name, $value in $colorValues {
    .bc-#{$name} {
        border-color: $value;
    }
}

// radius
.brad-xxs {
    border-radius: toRem(3px);
}

.brad-xs {
    border-radius: toRem(6px);
}

.brad-s {
    border-radius: toRem(12px);
}

.brad-std {
    border-radius: 60em;
}

.bradtl-s {
    border-top-left-radius: toRem(12px);
}

.bradtr-s {
    border-top-right-radius: toRem(12px);
}

.bradbl-s {
    border-bottom-left-radius: toRem(12px);
}

.bradbr-s {
    border-bottom-right-radius: toRem(12px);
}


// border

.b-no {
    border: none;
}

.bt-no {
    border-top: none;
}

.bb-no {
    border-bottom: none;
}

.bl-no {
    border-left: none;
}

.br-no {
    border-right: none;
}

// BORDER WIDTH

.bw-xs {
    border-width: 1px;
}

.bbw-xs {
    border-bottom-width: 1px;
}

.bbw-s {
    border-bottom-width: 2px;
}

.btw-xs {
    border-top-width: 1px;
}

.brw-xs {
    border-right-width: 1px;
}

.blw-xs {
    border-left-width: 1px;
}

.blw-s {
    border-left-width: 2px;
}

// BORDER STYLE

.bts-no {
    border-top-style: none;
}

.bs-s {
    border-style: solid;
}

.bts-s {
    border-top-style: solid;
}

.bbs-s {
    border-bottom-style: solid;
}

.bls-s {
    border-left-style: solid;
}

.brs-s {
    border-right-style: solid;
}

/* ===  WIDTH  === */

.w-100 {
    width: 100%;
}

.w-90 {
    width: 90%;
}

.w-80 {
    width: 80%;
}

.w-75 {
    width: 75%;
}
.w-70 {
    width: 70%;
}

.w-66c6 {
    width: 66.66%;
}

.w-60 {
    width: 60%;
}

.w-50 {
    width: 50%;
}

.w-40 {
    width: 40%;
}

.w-33c3 {
    width: 33.33%;
}

.w-30 {
    width: 30%;
}

.w-25 {
    width: 25%;
}

.w-20 {
    width: 20%;
}


.w-a {
    width: auto;
}

.mw-no {
    min-width: 0;
}

/* ===  HEIGHT  === */

.h-100 {
    height: 100%;
}

.h-100vh {
    height: 100vh;
}

.h-a {
    height: auto;
}

/* ===  MARGIN  === */

.ml-a {
    margin-left: auto;
}

.mr-a {
    margin-right: auto;
}

/*
mt-xs,
mt-s,
mt-m,
mt-l,
mt-xl,
mb-xs,
mb-s,
mb-m,
mb-l,
mb-xl...*/

@each $name, $value in $boxValues {
    .m-#{$name} {
        margin: $value;
    }
}

@each $side in $sides {
    @each $name, $value in $boxValues {
        .m#{str-slice($side, 0, 1)}-#{$name} {
            margin-#{$side}: $value;
        }
    }
}

@each $logicalSide in $logicalSides {
    @each $name, $value in $boxValues {
        .m#{str-slice($logicalSide, 0, 2)}-#{$name} {
            margin-#{$logicalSide}: $value;
        }
    }
}

/* ===  PADDING  === */

/*
pt-xs,
pt-s,
pt-m,
pt-l,
pt-xl,
pb-xs,
pb-s,
pb-m,
pb-l,
pb-xl...*/

@each $name, $value in $boxValues {
    .p-#{$name} {
        padding: $value;
    }
}

@each $side in $sides {
    @each $name, $value in $boxValues {
        .p#{str-slice($side, 0, 1)}-#{$name} {
            padding-#{$side}: $value;
        }
    }
}

@each $logicalSide in $logicalSides {
    @each $name, $value in $boxValues {
        .p#{str-slice($logicalSide, 0, 2)}-#{$name} {
            padding-#{$logicalSide}: $value;
        }
    }
}

/* ===  GAP  === */

/*
g-xs,
g-s,
g-m,
g-l,
g-xl...*/

@each $name, $value in $boxValues {
    .g-#{$name} {
        gap: $value;
    }
}

/*==  FONT ==*/

@each $name, $value in $fontValues {
    .fs-#{$name} {
        font-size: $value;
    }
}

// FONT FAMILY

.ff-main {
    font-family: $ff-main, sans-serif;
}

.ff-scd {
    font-family: $ff-scd, sans-serif;
}

// FONT WEIGHT

.fw-200 {
    font-weight: 200;
}

.fw-400 {
    font-weight: 400;
}

.fw-500 {
    font-weight: 500;
}

.fw-600 {
    font-weight: 600;
}

.fw-700 {
    font-weight: 700;
}

.fw-800 {
    font-weight: 800;
}

.fs-i {
    font-style: italic;
}

//*== MISC ==*/

.c-p {
    cursor: pointer;
}

.c-d {
    cursor: default;
}

.o-h {
    overflow: hidden;
}

.o-a {
    overflow: auto;
}

.ttx-n50 {
    transform: translateX(-50%);
}

.ttx-50 {
    transform: translateX(50%);
}

.tty-50 {
    transform: translateY(50%);
}

.tty-n50 {
    transform: translateY(-50%);
}

/* ==========================================================================
  ATOMIC CUSTOM CLASS
========================================================================== */

/* Here you can add all your custom atomik classes you need in addition
to the isting set defined in atomik.scss */

// === HOVER state ===//

.td-u\:h:hover {
    text-decoration: underline;
}


.o-1\:h:hover {
    opacity: 1;
}
